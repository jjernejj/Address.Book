!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common"),require("positioning")):"function"==typeof define&&define.amd?define("angular-confirmation-popover",["exports","@angular/core","@angular/common","positioning"],o):o((t=t||self)["angular-confirmation-popover"]={},t.ng.core,t.ng.common,t.positioning)}(this,(function(t,o,e,n){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var i=function(t,o){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e])})(t,o)};function r(t,o,e,n){var i,r=arguments.length,p=r<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,o,e,n);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(p=(r<3?i(p):r>3?i(o,e,p):i(o,e))||p);return r>3&&p&&Object.defineProperty(o,e,p),p}var p=function(){function t(){this.confirmText="Confirm",this.cancelText="Cancel",this.confirmButtonType="success",this.cancelButtonType="outline-secondary",this.placement="top",this.hideConfirmButton=!1,this.hideCancelButton=!1,this.popoverClass="",this.appendToBody=!1,this.reverseButtonOrder=!1,this.closeOnOutsideClick=!0}return t=r([o.Injectable()],t)}(),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return function(t,o){function e(){this.constructor=t}i(t,o),t.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}(e,t),e=r([o.Injectable()],e)}(p),c=function(){function t(t){this.options=t}return t.prototype.ngAfterViewInit=function(){this.options.onAfterViewInit()},t.ctorParameters=function(){return[{type:s}]},t=r([o.Component({selector:"mwl-confirmation-popover-window",template:'<ng-template #defaultTemplate let-options="options">\n  <div\n    [ngClass]="[\n      \'popover\',\n      options.placement,\n      \'popover-\' + options.placement,\n      \'bs-popover-\' + options.placement,\n      options.popoverClass\n    ]"\n  >\n    <div class="popover-arrow arrow"></div>\n    <h3\n      class="popover-title popover-header"\n      [innerHTML]="options.popoverTitle"\n    ></h3>\n    <div class="popover-content popover-body">\n      <p [innerHTML]="options.popoverMessage"></p>\n      <div\n        class="confirm-btns"\n        [class.confirm-btns-reversed]="options.reverseButtonOrder"\n      >\n        <div class="confirm-btn-container" *ngIf="!options.hideCancelButton">\n          <button\n            type="button"\n            [mwlFocus]="options.focusButton === \'cancel\'"\n            [class]="\'btn btn-block btn-\' + options.cancelButtonType"\n            (click)="options.onCancel({ clickEvent: $event })"\n            [innerHtml]="options.cancelText"\n          ></button>\n        </div>\n        <div class="confirm-btn-container" *ngIf="!options.hideConfirmButton">\n          <button\n            type="button"\n            [mwlFocus]="options.focusButton === \'confirm\'"\n            [class]="\'btn btn-block btn-\' + options.confirmButtonType"\n            (click)="options.onConfirm({ clickEvent: $event })"\n            [innerHtml]="options.confirmText"\n          ></button>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<ng-template\n  [ngTemplateOutlet]="options.customTemplate || defaultTemplate"\n  [ngTemplateOutletContext]="{ options: options }"\n>\n</ng-template>\n',styles:[".popover{display:block}.bs-popover-bottom .arrow,.bs-popover-top .arrow{left:50%}.bs-popover-left .arrow,.bs-popover-right .arrow{top:calc(50% - 8px)}.btn{transition:none}.confirm-btns{display:flex;justify-content:space-around}.confirm-btn-container{flex-basis:50%}.confirm-btn-container:not(:first-child){margin-left:4px}.confirm-btn-container:not(:last-child){margin-right:4px}.confirm-btns-reversed{flex-direction:row-reverse}.confirm-btns-reversed .confirm-btn-container:not(:first-child){margin-right:4px;margin-left:0}.confirm-btns-reversed .confirm-btn-container:not(:last-child){margin-right:0;margin-left:4px}"]})],t)}(),a=function(){function t(t,e,n,i,r){this.viewContainerRef=t,this.elm=e,this.defaultOptions=n,this.cfr=i,this.renderer=r,this.isDisabled=!1,this.isOpen=!1,this.isOpenChange=new o.EventEmitter(!0),this.confirm=new o.EventEmitter,this.cancel=new o.EventEmitter,this.eventListeners=[]}return t.prototype.ngOnInit=function(){this.isOpenChange.emit(!1)},t.prototype.ngOnChanges=function(t){t.isOpen&&(!0===t.isOpen.currentValue?this.showPopover():this.hidePopover())},t.prototype.ngOnDestroy=function(){this.hidePopover()},t.prototype.onConfirm=function(t){this.confirm.emit(t),this.hidePopover()},t.prototype.onCancel=function(t){this.cancel.emit(t),this.hidePopover()},t.prototype.togglePopover=function(){this.popover?this.hidePopover():this.showPopover()},t.prototype.onDocumentClick=function(t){var o=void 0!==this.closeOnOutsideClick?this.closeOnOutsideClick:this.defaultOptions.closeOnOutsideClick;this.popover&&!this.elm.nativeElement.contains(t.target)&&!this.popover.location.nativeElement.contains(t.target)&&o&&this.hidePopover()},t.prototype.showPopover=function(){var t=this;if(!this.popover&&!this.isDisabled){setTimeout((function(){t.eventListeners=[t.renderer.listen("document","click",(function(o){return t.onDocumentClick(o)})),t.renderer.listen("document","touchend",(function(o){return t.onDocumentClick(o)})),t.renderer.listen("window","resize",(function(){return t.positionPopover()}))]}));var e=new s;Object.assign(e,this.defaultOptions,{onConfirm:function(o){t.onConfirm(o)},onCancel:function(o){t.onCancel(o)},onAfterViewInit:function(){t.positionPopover()}});["confirmText","cancelText","placement","confirmButtonType","cancelButtonType","focusButton","hideConfirmButton","hideCancelButton","popoverClass","appendToBody","customTemplate","reverseButtonOrder","popoverTitle","popoverMessage"].forEach((function(o){void 0!==t[o]&&(e[o]=t[o])}));var n=this.cfr.resolveComponentFactory(c),i=o.Injector.create({providers:[{provide:s,useValue:e}]});this.popover=this.viewContainerRef.createComponent(n,this.viewContainerRef.length,i),e.appendToBody&&document.body.appendChild(this.popover.location.nativeElement),this.isOpenChange.emit(!0)}},t.prototype.positionPopover=function(){if(this.popover){var t=this.popover.location.nativeElement.children[0];n.positionElements(this.elm.nativeElement,t,this.placement||this.defaultOptions.placement,this.appendToBody||this.defaultOptions.appendToBody)}},t.prototype.hidePopover=function(){this.popover&&(this.popover.destroy(),delete this.popover,this.isOpenChange.emit(!1),this.eventListeners.forEach((function(t){return t()})),this.eventListeners=[])},t.ctorParameters=function(){return[{type:o.ViewContainerRef},{type:o.ElementRef},{type:p},{type:o.ComponentFactoryResolver},{type:o.Renderer2}]},r([o.Input()],t.prototype,"popoverTitle",void 0),r([o.Input()],t.prototype,"popoverMessage",void 0),r([o.Input()],t.prototype,"confirmText",void 0),r([o.Input()],t.prototype,"cancelText",void 0),r([o.Input()],t.prototype,"placement",void 0),r([o.Input()],t.prototype,"confirmButtonType",void 0),r([o.Input()],t.prototype,"cancelButtonType",void 0),r([o.Input()],t.prototype,"focusButton",void 0),r([o.Input()],t.prototype,"hideConfirmButton",void 0),r([o.Input()],t.prototype,"hideCancelButton",void 0),r([o.Input()],t.prototype,"isDisabled",void 0),r([o.Input()],t.prototype,"isOpen",void 0),r([o.Input()],t.prototype,"customTemplate",void 0),r([o.Output()],t.prototype,"isOpenChange",void 0),r([o.Output()],t.prototype,"confirm",void 0),r([o.Output()],t.prototype,"cancel",void 0),r([o.Input()],t.prototype,"popoverClass",void 0),r([o.Input()],t.prototype,"appendToBody",void 0),r([o.Input()],t.prototype,"reverseButtonOrder",void 0),r([o.Input()],t.prototype,"closeOnOutsideClick",void 0),r([o.HostListener("click")],t.prototype,"togglePopover",null),t=r([o.Directive({selector:"[mwlConfirmationPopover]"})],t)}(),u=function(){function t(t){this.elm=t}return t.prototype.ngOnChanges=function(t){t.mwlFocus&&!0===this.mwlFocus&&this.elm.nativeElement.focus()},t.ctorParameters=function(){return[{type:o.ElementRef}]},r([o.Input()],t.prototype,"mwlFocus",void 0),t=r([o.Directive({selector:"[mwlFocus]"})],t)}(),l=new o.InjectionToken("confirmation popover user options");function f(t){var o=new p;return Object.assign(o,t),o}var v=function(){function t(){}var n;return n=t,t.forRoot=function(t){return void 0===t&&(t={}),{ngModule:n,providers:[{provide:l,useValue:t},{provide:p,useFactory:f,deps:[l]}]}},t=n=r([o.NgModule({declarations:[a,c,u],imports:[e.CommonModule],exports:[a,u],entryComponents:[c]})],t)}();t.ConfirmationPopoverDirective=a,t.ConfirmationPopoverModule=v,t.FocusDirective=u,t.ɵa=l,t.ɵb=f,t.ɵc=p,t.ɵd=c,t.ɵe=s,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-confirmation-popover.umd.min.js.map